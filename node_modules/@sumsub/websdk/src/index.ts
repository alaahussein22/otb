import { InitBuilder } from './InitBuilder'
import Builder from './LegacyBuilder'
import type {
  PromisedTokenExpirationHandler,
  ErrorHandler,
  MessageHandler,
  SnsWebSdkOptions,
  SnsWebSdkBaseConfig,
} from './types'
import type { InitBuilder as IInitBuilder } from './InitBuilder'
import type IBuilder from './LegacyBuilder'

export type {
  IInitBuilder,
  IBuilder,
  PromisedTokenExpirationHandler,
  ErrorHandler,
  MessageHandler,
  SnsWebSdkOptions,
  SnsWebSdkBaseConfig,
}

export default {
  Builder(baseUrl: string, flowName?: string): IBuilder {
    return new Builder(baseUrl, flowName)
  },

  init(accessToken: string, updateAccessToken: PromisedTokenExpirationHandler): IInitBuilder {
    return new InitBuilder(accessToken, updateAccessToken)
  },
}
